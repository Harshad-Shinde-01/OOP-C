#include <iostream>
#include <string>

using namespace std;

class BankAccount {
private:
  string name;
  int accountNumber;
  double balance;

public:

  void entry() {
    cout << "enter name : ";
    cin >> name;
    cout << "enter account number : ";
    cin >> accountNumber;
    cout << "enter initial amount : ";
    cin >> balance;
  }


  void deposit(double amount) {
    balance += amount;
    cout << "Deposit successful. New balance: " << balance << endl;
  }


  void withdraw(double amount) {
    if (balance >= amount) {
      balance -= amount;
      cout << "Withdrawal successful. New balance: " << balance << endl;
    } else {
      cout << "Insufficient funds." << endl;
    }
  }


  void showDetails() {
    cout << "\nAccount Details: " << "Name: " << name << "  Account Number: " << accountNumber << "  Balance: " << balance << endl;
  }


  int getAccountNumber() { return accountNumber; }
};

int main() {

  BankAccount accounts[100]; // Assuming a maximum of 100 accounts
  int numAccounts = 0; 

  int choice;
  do {
    cout << "\nBanking Menu:" << endl;
    cout << "1. Add user" << endl;
    cout << "2. Deposit" << endl;
    cout << "3. Withdraw" << endl;
    cout << "4. Show Details" << endl;
    cout << "5. Exit" << endl;
    cout << "Enter your choice: ";
    cin >> choice;

    switch (choice) {
      case 1: {
        if (numAccounts < 100) {
          accounts[numAccounts].entry();
          numAccounts++; 
        } else {
          cout << "Maximum number of accounts reached." << endl;
        }
        break;
      }
      case 2: {
        int accountIndex;
        cout << "Enter account number to deposit to: ";
        cin >> accountIndex;

        for (int i = 0; i < numAccounts; ++i) {
          if (accounts[i].getAccountNumber() == accountIndex) {
            double amount;
            cout << "Enter deposit amount: ";
            cin >> amount;
            accounts[i].deposit(amount);
            break; 
          }
        }
        break;
      }
      case 3: {
        int accountIndex;
        cout << "Enter account number to withdraw from: ";
        cin >> accountIndex;

        for (int i = 0; i < numAccounts; ++i) {
          if (accounts[i].getAccountNumber() == accountIndex) {
            double amount;
            cout << "Enter withdrawal amount: ";
            cin >> amount;
            accounts[i].withdraw(amount);
            break; 
          }
        }
        break;
      }
      case 4: {
        int accountIndex;
        cout << "Enter account number to show details: ";
        cin >> accountIndex;

        for (int i = 0; i < numAccounts; ++i) {
          if (accounts[i].getAccountNumber() == accountIndex) {
            accounts[i].showDetails();
            break; 
          }
        }
        break;
      }
      case 5:
        cout << "Exiting..." << endl;
        break;
      default:
        cout << "Invalid choice. Please try again." << endl;
    }
  } while (choice != 5);

  return 0;
}
